TOP      = _ {EXP} _ ;

.EXP      = {EXP_2} | {EQUALS} | {LESS} | {LEQ} | {NEQ} | {GREATER} | {GEQ};
.EXP_2    = {EXP_3} | {SUM};
.EXP_3    = {EXP_4} | {PROD};
.EXP_4    = {EXP_5} | {MINUS};
.EXP_5    = {UNIT} | {INT} | {CHAR} | {STR} | \( _ {EXP} _ \) | {VAR} | {LEN} | {GETCHAR} | {ATOI};

EQUALS    = {EXP_2} _ \= _ {EXP_2};
NEQ       = {EXP_2} _ \!\= _ {EXP_2};
LESS      = {EXP_2} _ \< _ {EXP_2};
LEQ       = {EXP_2} _ \<\= _ {EXP_2};
GREATER   = {EXP_2} _ \> _ {EXP_2};
GEQ       = {EXP_2} _ \>\= _ {EXP_2};
SUM       = {EXP_3}( _ (\+ _ {EXP_3} | {MINUS}))+;
PROD      = {EXP_4}( _ \* _ {EXP_4})+;
MINUS     = \- _ {EXP_5};
NOT       = \! _ {EXP_5};

GETCHAR   = {EXP} _ \[ _ {EXP} _ \];
LEN       = len _ \( _ {EXP} _ \);
ATOI      = int _ \( _ {EXP} _ \);

UNIT      = \(\);
INT       = $(\d+);
CHAR      = \'{EC}\';
STR       = \"{EC}*\";
EC        = $(\w | \\.);
VAR       = $(\a(\w | \_)*);